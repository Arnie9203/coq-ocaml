DIGEST b42ded4b75741ddad0f5071f1b71e6f7
FLF.Imp
R897:905 Coq.Bool.Bool <> <> lib
R932:939 Coq.Init.Nat <> <> lib
R966:976 Coq.Arith.Arith <> <> lib
R1003:1013 Coq.Arith.EqNat <> <> lib
R1023:1025 Coq.Arith.PeanoNat Nat <> mod
R1052:1054 Coq.micromega.Lia <> <> lib
R1081:1090 Coq.Lists.List <> <> lib
R1100:1112 Coq.Lists.List ListNotations <> mod
R1139:1152 Coq.Strings.String <> <> lib
R1178:1181 LF.Maps <> <> lib
mod 1657:1660 <> AExp
ind 1777:1780 AExp aexp
constr 1796:1799 AExp ANum
constr 1815:1819 AExp APlus
constr 1840:1845 AExp AMinus
constr 1866:1870 AExp AMult
R1806:1808 Coq.Init.Datatypes <> nat ind
binder 1802:1802 <> n:3
R1830:1833 LF.Imp <> aexp:1 ind
binder 1822:1823 <> a1:4
binder 1825:1826 <> a2:5
R1856:1859 LF.Imp <> aexp:1 ind
binder 1848:1849 <> a1:6
binder 1851:1852 <> a2:7
R1881:1884 LF.Imp <> aexp:1 ind
binder 1873:1874 <> a1:8
binder 1876:1877 <> a2:9
ind 1899:1902 AExp bexp
constr 1918:1922 AExp BTrue
constr 1928:1933 AExp BFalse
constr 1939:1941 AExp BEq
constr 1962:1965 AExp BNeq
constr 1986:1988 AExp BLe
constr 2009:2011 AExp BGt
constr 2032:2035 AExp BNot
constr 2052:2055 AExp BAnd
R1952:1955 LF.Imp AExp aexp ind
binder 1944:1945 <> a1:12
binder 1947:1948 <> a2:13
R1976:1979 LF.Imp AExp aexp ind
binder 1968:1969 <> a1:14
binder 1971:1972 <> a2:15
R1999:2002 LF.Imp AExp aexp ind
binder 1991:1992 <> a1:16
binder 1994:1995 <> a2:17
R2022:2025 LF.Imp AExp aexp ind
binder 2014:2015 <> a1:18
binder 2017:2018 <> a2:19
R2042:2045 LF.Imp <> bexp:10 ind
binder 2038:2038 <> b:20
R2066:2069 LF.Imp <> bexp:10 ind
binder 2058:2059 <> b1:21
binder 2061:2062 <> b2:22
def 4717:4721 AExp aeval
R4728:4731 LF.Imp AExp aexp ind
binder 4724:4724 <> a:23
R4736:4738 Coq.Init.Datatypes <> nat ind
R4751:4751 LF.Imp <> a:23 var
R4762:4765 LF.Imp AExp ANum constr
R4778:4782 LF.Imp AExp APlus constr
R4794:4794 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R4803:4807 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R4816:4816 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R4795:4799 LF.Imp <> aeval:24 def
R4808:4812 LF.Imp <> aeval:24 def
R4822:4827 LF.Imp AExp AMinus constr
R4838:4838 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R4847:4851 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R4860:4860 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R4839:4843 LF.Imp <> aeval:24 def
R4852:4856 LF.Imp <> aeval:24 def
R4866:4870 LF.Imp AExp AMult constr
R4882:4882 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R4891:4895 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R4904:4904 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R4883:4887 LF.Imp <> aeval:24 def
R4896:4900 LF.Imp <> aeval:24 def
def 4922:4932 AExp test_aeval1
R4968:4970 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4937:4941 LF.Imp AExp aeval def
R4944:4948 LF.Imp AExp APlus constr
R4951:4954 LF.Imp AExp ANum constr
R4960:4963 LF.Imp AExp ANum constr
def 5078:5082 AExp beval
R5089:5092 LF.Imp AExp bexp ind
binder 5085:5085 <> b:26
R5097:5100 Coq.Init.Datatypes <> bool ind
R5113:5113 LF.Imp <> b:26 var
R5124:5128 LF.Imp AExp BTrue constr
R5139:5142 Coq.Init.Datatypes <> true constr
R5148:5153 LF.Imp AExp BFalse constr
R5163:5167 Coq.Init.Datatypes <> false constr
R5173:5175 LF.Imp AExp BEq constr
R5188:5188 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5197:5202 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5211:5211 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5189:5193 LF.Imp AExp aeval def
R5203:5207 LF.Imp AExp aeval def
R5217:5220 LF.Imp AExp BNeq constr
R5232:5235 Coq.Init.Datatypes <> negb def
R5238:5238 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5247:5252 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5261:5261 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5239:5243 LF.Imp AExp aeval def
R5253:5257 LF.Imp AExp aeval def
R5268:5270 LF.Imp AExp BLe constr
R5283:5283 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5292:5298 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5307:5307 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5284:5288 LF.Imp AExp aeval def
R5299:5303 LF.Imp AExp aeval def
R5313:5315 LF.Imp AExp BGt constr
R5328:5331 Coq.Init.Datatypes <> negb def
R5334:5334 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5343:5349 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5358:5358 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5335:5339 LF.Imp AExp aeval def
R5350:5354 LF.Imp AExp aeval def
R5365:5368 LF.Imp AExp BNot constr
R5380:5383 Coq.Init.Datatypes <> negb def
R5386:5390 LF.Imp <> beval:27 def
R5400:5403 LF.Imp AExp BAnd constr
R5415:5418 Coq.Init.Datatypes <> andb def
R5432:5436 LF.Imp <> beval:27 def
R5421:5425 LF.Imp <> beval:27 def
def 5847:5860 AExp optimize_0plus
R5865:5868 LF.Imp AExp aexp ind
binder 5863:5863 <> a:29
R5873:5876 LF.Imp AExp aexp ind
R5889:5889 LF.Imp <> a:29 var
R5900:5903 LF.Imp AExp ANum constr
R5910:5913 LF.Imp AExp ANum constr
R5921:5925 LF.Imp AExp APlus constr
R5928:5931 LF.Imp AExp ANum constr
R5942:5955 LF.Imp <> optimize_0plus:30 def
R5964:5968 LF.Imp AExp APlus constr
R5980:5984 LF.Imp AExp APlus constr
R5988:6001 LF.Imp <> optimize_0plus:30 def
R6008:6021 LF.Imp <> optimize_0plus:30 def
R6031:6036 LF.Imp AExp AMinus constr
R6047:6052 LF.Imp AExp AMinus constr
R6055:6068 LF.Imp <> optimize_0plus:30 def
R6075:6088 LF.Imp <> optimize_0plus:30 def
R6098:6102 LF.Imp AExp AMult constr
R6114:6118 LF.Imp AExp AMult constr
R6122:6135 LF.Imp <> optimize_0plus:30 def
R6142:6155 LF.Imp <> optimize_0plus:30 def
def 6323:6341 AExp test_optimize_0plus
R6475:6479 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6346:6359 LF.Imp AExp optimize_0plus def
R6362:6366 LF.Imp AExp APlus constr
R6369:6372 LF.Imp AExp ANum constr
R6402:6406 LF.Imp AExp APlus constr
R6409:6412 LF.Imp AExp ANum constr
R6449:6453 LF.Imp AExp APlus constr
R6456:6459 LF.Imp AExp ANum constr
R6465:6468 LF.Imp AExp ANum constr
R6480:6484 LF.Imp AExp APlus constr
R6487:6490 LF.Imp AExp ANum constr
R6496:6499 LF.Imp AExp ANum constr
prf 6725:6744 AExp optimize_0plus_sound
binder 6754:6754 <> a:32
R6783:6785 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6759:6763 LF.Imp AExp aeval def
R6766:6779 LF.Imp AExp optimize_0plus def
R6781:6781 LF.Imp <> a:32 var
R6786:6790 LF.Imp AExp aeval def
R6792:6792 LF.Imp <> a:32 var
prf 8933:8938 AExp silly1
binder 8949:8950 <> ae:33
R8961:8963 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8953:8957 LF.Imp AExp aeval def
R8959:8960 LF.Imp <> ae:33 var
R8964:8968 LF.Imp AExp aeval def
R8970:8971 LF.Imp <> ae:33 var
prf 9052:9057 AExp silly2
binder 9069:9069 <> P:34
R9081:9084 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9080:9080 LF.Imp <> P:34 var
R9085:9085 LF.Imp <> P:34 var
prf 9828:9830 AExp foo
binder 9841:9841 <> n:35
R9851:9853 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9845:9849 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R9850:9850 LF.Imp <> n:35 var
R9854:9857 Coq.Init.Datatypes <> true constr
prf 10104:10107 AExp foo'
binder 10118:10118 <> n:36
R10128:10130 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10122:10126 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R10127:10127 LF.Imp <> n:36 var
R10131:10134 Coq.Init.Datatypes <> true constr
prf 10476:10496 AExp optimize_0plus_sound'
binder 10506:10506 <> a:37
R10535:10537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10511:10515 LF.Imp AExp aeval def
R10518:10531 LF.Imp AExp optimize_0plus def
R10533:10533 LF.Imp <> a:37 var
R10538:10542 LF.Imp AExp aeval def
R10544:10544 LF.Imp <> a:37 var
prf 13374:13395 AExp optimize_0plus_sound''
binder 13405:13405 <> a:38
R13434:13436 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13410:13414 LF.Imp AExp aeval def
R13417:13430 LF.Imp AExp optimize_0plus def
R13432:13432 LF.Imp <> a:38 var
R13437:13441 LF.Imp AExp aeval def
R13443:13443 LF.Imp <> a:38 var
prf 14871:14874 AExp In10
R14878:14879 Coq.Lists.List <> In def
R14884:14884 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14886:14886 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14888:14888 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14890:14890 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14892:14892 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14894:14894 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14896:14896 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14898:14898 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14900:14900 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14902:14902 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14905:14905 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
prf 15164:15168 AExp In10'
R15172:15173 Coq.Lists.List <> In def
R15178:15178 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15180:15180 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15182:15182 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15184:15184 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15186:15186 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15188:15188 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15190:15190 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15192:15192 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15194:15194 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15196:15196 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15199:15199 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
prf 15523:15533 AExp repeat_loop
R15551:15553 Coq.Init.Datatypes <> nat ind
binder 15545:15545 <> m:39
binder 15547:15547 <> n:40
R15564:15566 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15560:15562 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R15559:15559 LF.Imp <> m:39 var
R15563:15563 LF.Imp <> n:40 var
R15568:15570 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R15567:15567 LF.Imp <> n:40 var
R15571:15571 LF.Imp <> m:39 var
def 16820:16835 AExp optimize_0plus_b
R16842:16845 LF.Imp AExp bexp ind
binder 16838:16838 <> b:41
R16850:16853 LF.Imp AExp bexp ind
prf 16931:16952 AExp optimize_0plus_b_sound
binder 16963:16963 <> b:43
R16994:16996 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16968:16972 LF.Imp AExp beval def
R16975:16990 LF.Imp AExp optimize_0plus_b prfax
R16992:16992 LF.Imp <> b:43 var
R16997:17001 LF.Imp AExp beval def
R17003:17003 LF.Imp <> b:43 var
prf 19264:19278 AExp invert_example1
R19296:19298 Coq.Init.Datatypes <> nat ind
binder 19289:19289 <> a:44
binder 19291:19291 <> b:45
binder 19293:19293 <> c:46
R19316:19319 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19308:19310 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19302:19302 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19304:19305 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19307:19307 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19303:19303 LF.Imp <> a:44 var
R19306:19306 LF.Imp <> b:45 var
R19311:19311 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19313:19313 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19315:19315 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19312:19312 LF.Imp <> a:44 var
R19314:19314 LF.Imp <> c:46 var
R19321:19323 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19320:19320 LF.Imp <> b:45 var
R19324:19324 LF.Imp <> c:46 var
def 20138:20161 AExp silly_presburger_example
binder 20172:20172 <> m:47
binder 20174:20174 <> n:48
binder 20176:20176 <> o:49
binder 20178:20178 <> p:50
R20214:20219 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20197:20200 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R20188:20191 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R20184:20186 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R20183:20183 LF.Imp <> m:47 var
R20187:20187 LF.Imp <> n:48 var
R20193:20195 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R20192:20192 LF.Imp <> n:48 var
R20196:20196 LF.Imp <> o:49 var
R20206:20208 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20202:20204 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R20201:20201 LF.Imp <> o:49 var
R20210:20212 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R20209:20209 LF.Imp <> p:50 var
R20221:20224 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R20220:20220 LF.Imp <> m:47 var
R20225:20225 LF.Imp <> p:50 var
def 20264:20276 AExp add_comm__lia
binder 20287:20287 <> m:51
binder 20289:20289 <> n:52
R20301:20303 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20297:20299 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R20296:20296 LF.Imp <> m:51 var
R20300:20300 LF.Imp <> n:52 var
R20305:20307 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R20304:20304 LF.Imp <> n:52 var
R20308:20308 LF.Imp <> m:51 var
def 20347:20360 AExp add_assoc__lia
binder 20371:20371 <> m:53
binder 20373:20373 <> n:54
binder 20375:20375 <> p:55
R20393:20395 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20383:20386 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R20392:20392 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R20382:20382 LF.Imp <> m:53 var
R20388:20390 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R20387:20387 LF.Imp <> n:54 var
R20391:20391 LF.Imp <> p:55 var
R20401:20403 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R20397:20399 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R20396:20396 LF.Imp <> m:53 var
R20400:20400 LF.Imp <> n:54 var
R20404:20404 LF.Imp <> p:55 var
mod 22345:22360 <> AExp.aevalR_first_try
ind 22374:22379 AExp.aevalR_first_try aevalR
constr 22410:22415 AExp.aevalR_first_try E_ANum
constr 22457:22463 AExp.aevalR_first_try E_APlus
constr 22581:22588 AExp.aevalR_first_try E_AMinus
constr 22707:22713 AExp.aevalR_first_try E_AMult
R22387:22390 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22383:22386 LF.Imp AExp aexp ind
R22394:22397 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22391:22393 Coq.Init.Datatypes <> nat ind
R22422:22424 Coq.Init.Datatypes <> nat ind
binder 22418:22418 <> n:58
R22435:22440 LF.Imp <> aevalR:56 ind
R22451:22451 LF.Imp <> n:58 var
R22443:22446 LF.Imp AExp ANum constr
R22448:22448 LF.Imp <> n:58 var
R22474:22477 LF.Imp AExp aexp ind
binder 22466:22467 <> e1:59
binder 22469:22470 <> e2:60
R22489:22491 Coq.Init.Datatypes <> nat ind
binder 22481:22482 <> n1:61
binder 22484:22485 <> n2:62
R22514:22523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22502:22507 LF.Imp <> aevalR:56 ind
R22512:22513 LF.Imp <> n1:61 var
R22509:22510 LF.Imp <> e1:59 var
R22536:22545 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22524:22529 LF.Imp <> aevalR:56 ind
R22534:22535 LF.Imp <> n2:62 var
R22531:22532 LF.Imp <> e2:60 var
R22546:22551 LF.Imp <> aevalR:56 ind
R22570:22572 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R22568:22569 LF.Imp <> n1:61 var
R22573:22574 LF.Imp <> n2:62 var
R22554:22558 LF.Imp AExp APlus constr
R22560:22561 LF.Imp <> e1:59 var
R22563:22564 LF.Imp <> e2:60 var
R22599:22602 LF.Imp AExp aexp ind
binder 22591:22592 <> e1:63
binder 22594:22595 <> e2:64
R22614:22616 Coq.Init.Datatypes <> nat ind
binder 22606:22607 <> n1:65
binder 22609:22610 <> n2:66
R22639:22648 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22627:22632 LF.Imp <> aevalR:56 ind
R22637:22638 LF.Imp <> n1:65 var
R22634:22635 LF.Imp <> e1:63 var
R22661:22670 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22649:22654 LF.Imp <> aevalR:56 ind
R22659:22660 LF.Imp <> n2:66 var
R22656:22657 LF.Imp <> e2:64 var
R22671:22676 LF.Imp <> aevalR:56 ind
R22696:22698 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R22694:22695 LF.Imp <> n1:65 var
R22699:22700 LF.Imp <> n2:66 var
R22679:22684 LF.Imp AExp AMinus constr
R22686:22687 LF.Imp <> e1:63 var
R22689:22690 LF.Imp <> e2:64 var
R22724:22727 LF.Imp AExp aexp ind
binder 22716:22717 <> e1:67
binder 22719:22720 <> e2:68
R22739:22741 Coq.Init.Datatypes <> nat ind
binder 22731:22732 <> n1:69
binder 22734:22735 <> n2:70
R22764:22773 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22752:22757 LF.Imp <> aevalR:56 ind
R22762:22763 LF.Imp <> n1:69 var
R22759:22760 LF.Imp <> e1:67 var
R22786:22795 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22774:22779 LF.Imp <> aevalR:56 ind
R22784:22785 LF.Imp <> n2:70 var
R22781:22782 LF.Imp <> e2:68 var
R22796:22801 LF.Imp <> aevalR:56 ind
R22820:22822 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R22818:22819 LF.Imp <> n1:69 var
R22823:22824 LF.Imp <> n2:70 var
R22804:22808 LF.Imp AExp AMult constr
R22810:22811 LF.Imp <> e1:67 var
R22813:22814 LF.Imp <> e2:68 var
mod 22836:22850 <> AExp.aevalR_first_try.HypothesisNames
ind 23017:23022 AExp.aevalR_first_try.HypothesisNames aevalR
constr 23053:23058 AExp.aevalR_first_try.HypothesisNames E_ANum
constr 23100:23106 AExp.aevalR_first_try.HypothesisNames E_APlus
constr 23232:23239 AExp.aevalR_first_try.HypothesisNames E_AMinus
constr 23366:23372 AExp.aevalR_first_try.HypothesisNames E_AMult
R23030:23033 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23026:23029 LF.Imp AExp aexp ind
R23037:23040 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23034:23036 Coq.Init.Datatypes <> nat ind
R23065:23067 Coq.Init.Datatypes <> nat ind
binder 23061:23061 <> n:73
R23078:23083 LF.Imp <> aevalR:71 ind
R23094:23094 LF.Imp <> n:73 var
R23086:23089 LF.Imp AExp ANum constr
R23091:23091 LF.Imp <> n:73 var
R23117:23120 LF.Imp AExp aexp ind
binder 23109:23110 <> e1:74
binder 23112:23113 <> e2:75
R23132:23134 Coq.Init.Datatypes <> nat ind
binder 23124:23125 <> n1:76
binder 23127:23128 <> n2:77
R23149:23154 LF.Imp <> aevalR:71 ind
R23159:23160 LF.Imp <> n1:76 var
R23156:23157 LF.Imp <> e1:74 var
binder 23144:23145 <> H1:78
R23175:23180 LF.Imp <> aevalR:71 ind
R23185:23186 LF.Imp <> n2:77 var
R23182:23183 LF.Imp <> e2:75 var
binder 23170:23171 <> H2:79
R23197:23202 LF.Imp <> aevalR:71 ind
R23221:23223 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R23219:23220 LF.Imp <> n1:76 var
R23224:23225 LF.Imp <> n2:77 var
R23205:23209 LF.Imp AExp APlus constr
R23211:23212 LF.Imp <> e1:74 var
R23214:23215 LF.Imp <> e2:75 var
R23250:23253 LF.Imp AExp aexp ind
binder 23242:23243 <> e1:80
binder 23245:23246 <> e2:81
R23265:23267 Coq.Init.Datatypes <> nat ind
binder 23257:23258 <> n1:82
binder 23260:23261 <> n2:83
R23282:23287 LF.Imp <> aevalR:71 ind
R23292:23293 LF.Imp <> n1:82 var
R23289:23290 LF.Imp <> e1:80 var
binder 23277:23278 <> H1:84
R23308:23313 LF.Imp <> aevalR:71 ind
R23318:23319 LF.Imp <> n2:83 var
R23315:23316 LF.Imp <> e2:81 var
binder 23303:23304 <> H2:85
R23330:23335 LF.Imp <> aevalR:71 ind
R23355:23357 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R23353:23354 LF.Imp <> n1:82 var
R23358:23359 LF.Imp <> n2:83 var
R23338:23343 LF.Imp AExp AMinus constr
R23345:23346 LF.Imp <> e1:80 var
R23348:23349 LF.Imp <> e2:81 var
R23383:23386 LF.Imp AExp aexp ind
binder 23375:23376 <> e1:86
binder 23378:23379 <> e2:87
R23398:23400 Coq.Init.Datatypes <> nat ind
binder 23390:23391 <> n1:88
binder 23393:23394 <> n2:89
R23415:23420 LF.Imp <> aevalR:71 ind
R23425:23426 LF.Imp <> n1:88 var
R23422:23423 LF.Imp <> e1:86 var
binder 23410:23411 <> H1:90
R23441:23446 LF.Imp <> aevalR:71 ind
R23451:23452 LF.Imp <> n2:89 var
R23448:23449 LF.Imp <> e2:87 var
binder 23436:23437 <> H2:91
R23463:23468 LF.Imp <> aevalR:71 ind
R23487:23489 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R23485:23486 LF.Imp <> n1:88 var
R23490:23491 LF.Imp <> n2:89 var
R23471:23475 LF.Imp AExp AMult constr
R23477:23478 LF.Imp <> e1:86 var
R23480:23481 LF.Imp <> e2:87 var
R23675:23689 LF.Imp AExp.aevalR_first_try.HypothesisNames <> mod
R23891:23896 LF.Imp AExp.aevalR_first_try aevalR ind
not 23866:23866 AExp.aevalR_first_try ::type_scope:x_'==>'_x
R23977:23992 LF.Imp AExp.aevalR_first_try <> mod
ind 24239:24244 AExp aevalR
constr 24275:24280 AExp E_ANum
constr 24319:24325 AExp E_APlus
constr 24439:24446 AExp E_AMinus
constr 24560:24566 AExp E_AMult
R24252:24255 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24248:24251 LF.Imp AExp aexp ind
R24259:24262 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24256:24258 Coq.Init.Datatypes <> nat ind
R24701:24706 LF.Imp <> aevalR:93 ind
R24287:24289 Coq.Init.Datatypes <> nat ind
binder 24283:24283 <> n:94
R24300:24300 LF.Imp AExp ::type_scope:x_'==>'_x not
R24307:24312 LF.Imp AExp ::type_scope:x_'==>'_x not
R24301:24304 LF.Imp AExp ANum constr
R24306:24306 LF.Imp <> n:94 var
R24313:24313 LF.Imp <> n:94 var
R24336:24339 LF.Imp AExp aexp ind
binder 24328:24329 <> e1:95
binder 24331:24332 <> e2:96
R24351:24353 Coq.Init.Datatypes <> nat ind
binder 24343:24344 <> n1:97
binder 24346:24347 <> n2:98
R24364:24364 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24374:24384 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24367:24371 LF.Imp AExp ::type_scope:x_'==>'_x not
R24365:24366 LF.Imp <> e1:95 var
R24372:24373 LF.Imp <> n1:97 var
R24385:24385 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24395:24405 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24388:24392 LF.Imp AExp ::type_scope:x_'==>'_x not
R24386:24387 LF.Imp <> e2:96 var
R24393:24394 LF.Imp <> n2:98 var
R24406:24406 LF.Imp AExp ::type_scope:x_'==>'_x not
R24418:24425 LF.Imp AExp ::type_scope:x_'==>'_x not
R24433:24433 LF.Imp AExp ::type_scope:x_'==>'_x not
R24407:24411 LF.Imp AExp APlus constr
R24413:24414 LF.Imp <> e1:95 var
R24416:24417 LF.Imp <> e2:96 var
R24428:24430 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R24426:24427 LF.Imp <> n1:97 var
R24431:24432 LF.Imp <> n2:98 var
R24457:24460 LF.Imp AExp aexp ind
binder 24449:24450 <> e1:99
binder 24452:24453 <> e2:100
R24472:24474 Coq.Init.Datatypes <> nat ind
binder 24464:24465 <> n1:101
binder 24467:24468 <> n2:102
R24485:24485 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24495:24505 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24488:24492 LF.Imp AExp ::type_scope:x_'==>'_x not
R24486:24487 LF.Imp <> e1:99 var
R24493:24494 LF.Imp <> n1:101 var
R24506:24506 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24516:24526 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24509:24513 LF.Imp AExp ::type_scope:x_'==>'_x not
R24507:24508 LF.Imp <> e2:100 var
R24514:24515 LF.Imp <> n2:102 var
R24527:24527 LF.Imp AExp ::type_scope:x_'==>'_x not
R24540:24546 LF.Imp AExp ::type_scope:x_'==>'_x not
R24554:24554 LF.Imp AExp ::type_scope:x_'==>'_x not
R24528:24533 LF.Imp AExp AMinus constr
R24535:24536 LF.Imp <> e1:99 var
R24538:24539 LF.Imp <> e2:100 var
R24549:24551 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R24547:24548 LF.Imp <> n1:101 var
R24552:24553 LF.Imp <> n2:102 var
R24577:24580 LF.Imp AExp aexp ind
binder 24569:24570 <> e1:103
binder 24572:24573 <> e2:104
R24592:24594 Coq.Init.Datatypes <> nat ind
binder 24584:24585 <> n1:105
binder 24587:24588 <> n2:106
R24605:24605 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24615:24625 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24608:24612 LF.Imp AExp ::type_scope:x_'==>'_x not
R24606:24607 LF.Imp <> e1:103 var
R24613:24614 LF.Imp <> n1:105 var
R24626:24626 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24636:24646 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24629:24633 LF.Imp AExp ::type_scope:x_'==>'_x not
R24627:24628 LF.Imp <> e2:104 var
R24634:24635 LF.Imp <> n2:106 var
R24647:24647 LF.Imp AExp ::type_scope:x_'==>'_x not
R24659:24666 LF.Imp AExp ::type_scope:x_'==>'_x not
R24674:24674 LF.Imp AExp ::type_scope:x_'==>'_x not
R24648:24652 LF.Imp AExp AMult constr
R24654:24655 LF.Imp <> e1:103 var
R24657:24658 LF.Imp <> e2:104 var
R24669:24671 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R24667:24668 LF.Imp <> n1:105 var
R24672:24673 LF.Imp <> n2:106 var
R24701:24706 LF.Imp AExp aevalR ind
not 24685:24685 AExp ::type_scope:x_'==>'_x
def 27996:28023 AExp manual_grade_for_beval_rules
R28027:28032 Coq.Init.Datatypes <> option ind
R28038:28038 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R28035:28037 Coq.Init.Datatypes <> nat ind
R28039:28044 Coq.Strings.String <> string ind
R28050:28053 Coq.Init.Datatypes <> None constr
prf 28300:28315 AExp aeval_iff_aevalR
binder 28326:28326 <> a:107
binder 28328:28328 <> n:108
R28333:28333 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28341:28346 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28335:28339 LF.Imp AExp ::type_scope:x_'==>'_x not
R28334:28334 LF.Imp <> a:107 var
R28340:28340 LF.Imp <> n:108 var
R28354:28356 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28347:28351 LF.Imp AExp aeval def
R28353:28353 LF.Imp <> a:107 var
R28357:28357 LF.Imp <> n:108 var
R28801:28806 LF.Imp AExp E_ANum constr
R28801:28806 LF.Imp AExp E_ANum constr
R28837:28843 LF.Imp AExp E_APlus constr
R28837:28843 LF.Imp AExp E_APlus constr
R28937:28944 LF.Imp AExp E_AMinus constr
R28937:28944 LF.Imp AExp E_AMinus constr
R29037:29043 LF.Imp AExp E_AMult constr
R29037:29043 LF.Imp AExp E_AMult constr
prf 29203:29219 AExp aeval_iff_aevalR'
binder 29230:29230 <> a:109
binder 29232:29232 <> n:110
R29237:29237 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R29245:29250 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R29239:29243 LF.Imp AExp ::type_scope:x_'==>'_x not
R29238:29238 LF.Imp <> a:109 var
R29244:29244 LF.Imp <> n:110 var
R29258:29260 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29251:29255 LF.Imp AExp aeval def
R29257:29257 LF.Imp <> a:109 var
R29261:29261 LF.Imp <> n:110 var
ind 29751:29756 AExp bevalR
R29763:29766 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29759:29762 LF.Imp AExp bexp ind
R29771:29774 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29767:29770 Coq.Init.Datatypes <> bool ind
R29825:29830 LF.Imp <> bevalR:112 ind
R29825:29830 LF.Imp AExp bevalR ind
not 29808:29808 AExp ::type_scope:x_'==>b'_x
prf 29859:29874 AExp beval_iff_bevalR
binder 29885:29885 <> b:113
binder 29887:29888 <> bv:114
R29902:29906 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R29894:29899 LF.Imp AExp ::type_scope:x_'==>b'_x not
R29893:29893 LF.Imp <> b:113 var
R29900:29901 LF.Imp <> bv:114 var
R29914:29916 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29907:29911 LF.Imp AExp beval def
R29913:29913 LF.Imp <> b:113 var
R29917:29918 LF.Imp <> bv:114 var
R29974:29977 LF.Imp AExp <> mod
mod 30447:30461 <> aevalR_division
ind 30574:30577 aevalR_division aexp
constr 30593:30596 aevalR_division ANum
constr 30612:30616 aevalR_division APlus
constr 30637:30642 aevalR_division AMinus
constr 30663:30667 aevalR_division AMult
constr 30688:30691 aevalR_division ADiv
R30603:30605 Coq.Init.Datatypes <> nat ind
binder 30599:30599 <> n:117
R30627:30630 LF.Imp <> aexp:115 ind
binder 30619:30620 <> a1:118
binder 30622:30623 <> a2:119
R30653:30656 LF.Imp <> aexp:115 ind
binder 30645:30646 <> a1:120
binder 30648:30649 <> a2:121
R30678:30681 LF.Imp <> aexp:115 ind
binder 30670:30671 <> a1:122
binder 30673:30674 <> a2:123
R30702:30705 LF.Imp <> aexp:115 ind
binder 30694:30695 <> a1:124
binder 30697:30698 <> a2:125
ind 31047:31052 aevalR_division aevalR
constr 31083:31088 aevalR_division E_ANum
constr 31127:31133 aevalR_division E_APlus
constr 31234:31241 aevalR_division E_AMinus
constr 31343:31349 aevalR_division E_AMult
constr 31450:31455 aevalR_division E_ADiv
R31060:31063 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31056:31059 LF.Imp aevalR_division aexp ind
R31067:31070 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31064:31066 Coq.Init.Datatypes <> nat ind
R31635:31640 LF.Imp <> aevalR:127 ind
R31095:31097 Coq.Init.Datatypes <> nat ind
binder 31091:31091 <> n:128
R31108:31108 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31115:31120 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31109:31112 LF.Imp aevalR_division ANum constr
R31114:31114 LF.Imp <> n:128 var
R31121:31121 LF.Imp <> n:128 var
R31144:31147 LF.Imp aevalR_division aexp ind
binder 31136:31137 <> a1:129
binder 31139:31140 <> a2:130
R31159:31161 Coq.Init.Datatypes <> nat ind
binder 31151:31152 <> n1:131
binder 31154:31155 <> n2:132
R31172:31172 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31182:31186 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31175:31179 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31173:31174 LF.Imp <> a1:129 var
R31180:31181 LF.Imp <> n1:131 var
R31187:31187 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31197:31201 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31190:31194 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31188:31189 LF.Imp <> a2:130 var
R31195:31196 LF.Imp <> n2:132 var
R31202:31202 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31214:31220 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31228:31228 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31203:31207 LF.Imp aevalR_division APlus constr
R31209:31210 LF.Imp <> a1:129 var
R31212:31213 LF.Imp <> a2:130 var
R31223:31225 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R31221:31222 LF.Imp <> n1:131 var
R31226:31227 LF.Imp <> n2:132 var
R31252:31255 LF.Imp aevalR_division aexp ind
binder 31244:31245 <> a1:133
binder 31247:31248 <> a2:134
R31267:31269 Coq.Init.Datatypes <> nat ind
binder 31259:31260 <> n1:135
binder 31262:31263 <> n2:136
R31280:31280 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31290:31294 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31283:31287 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31281:31282 LF.Imp <> a1:133 var
R31288:31289 LF.Imp <> n1:135 var
R31295:31295 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31305:31309 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31298:31302 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31296:31297 LF.Imp <> a2:134 var
R31303:31304 LF.Imp <> n2:136 var
R31310:31310 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31323:31329 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31337:31337 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31311:31316 LF.Imp aevalR_division AMinus constr
R31318:31319 LF.Imp <> a1:133 var
R31321:31322 LF.Imp <> a2:134 var
R31332:31334 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R31330:31331 LF.Imp <> n1:135 var
R31335:31336 LF.Imp <> n2:136 var
R31360:31363 LF.Imp aevalR_division aexp ind
binder 31352:31353 <> a1:137
binder 31355:31356 <> a2:138
R31375:31377 Coq.Init.Datatypes <> nat ind
binder 31367:31368 <> n1:139
binder 31370:31371 <> n2:140
R31388:31388 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31398:31402 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31391:31395 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31389:31390 LF.Imp <> a1:137 var
R31396:31397 LF.Imp <> n1:139 var
R31403:31403 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31413:31417 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31406:31410 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31404:31405 LF.Imp <> a2:138 var
R31411:31412 LF.Imp <> n2:140 var
R31418:31418 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31430:31436 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31444:31444 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31419:31423 LF.Imp aevalR_division AMult constr
R31425:31426 LF.Imp <> a1:137 var
R31428:31429 LF.Imp <> a2:138 var
R31439:31441 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R31437:31438 LF.Imp <> n1:139 var
R31442:31443 LF.Imp <> n2:140 var
R31466:31469 LF.Imp aevalR_division aexp ind
binder 31458:31459 <> a1:141
binder 31461:31462 <> a2:142
R31484:31486 Coq.Init.Datatypes <> nat ind
binder 31473:31474 <> n1:143
binder 31476:31477 <> n2:144
binder 31479:31480 <> n3:145
R31523:31523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31533:31537 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31526:31530 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31524:31525 LF.Imp <> a1:141 var
R31531:31532 LF.Imp <> n1:143 var
R31538:31538 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31548:31552 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31541:31545 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31539:31540 LF.Imp <> a2:142 var
R31546:31547 LF.Imp <> n2:144 var
R31553:31553 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31560:31570 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31556:31558 Coq.Init.Peano <> ::nat_scope:x_'>'_x not
R31554:31555 LF.Imp <> n2:144 var
R31571:31571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31587:31591 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31582:31584 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31572:31575 Coq.Init.Peano <> mult abbrev
R31577:31578 LF.Imp <> n2:144 var
R31580:31581 LF.Imp <> n3:145 var
R31585:31586 LF.Imp <> n1:143 var
R31592:31592 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31603:31608 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R31593:31596 LF.Imp aevalR_division ADiv constr
R31598:31599 LF.Imp <> a1:141 var
R31601:31602 LF.Imp <> a2:142 var
R31609:31610 LF.Imp <> n3:145 var
R31635:31640 LF.Imp aevalR_division aevalR ind
not 31619:31619 aevalR_division ::type_scope:x_'==>'_x
R31799:31813 LF.Imp aevalR_division <> mod
mod 31824:31838 <> aevalR_extended
ind 32317:32320 aevalR_extended aexp
constr 32336:32339 aevalR_extended AAny
constr 32386:32389 aevalR_extended ANum
constr 32405:32409 aevalR_extended APlus
constr 32430:32435 aevalR_extended AMinus
constr 32456:32460 aevalR_extended AMult
R32396:32398 Coq.Init.Datatypes <> nat ind
binder 32392:32392 <> n:148
R32420:32423 LF.Imp <> aexp:146 ind
binder 32412:32413 <> a1:149
binder 32415:32416 <> a2:150
R32446:32449 LF.Imp <> aexp:146 ind
binder 32438:32439 <> a1:151
binder 32441:32442 <> a2:152
R32471:32474 LF.Imp <> aexp:146 ind
binder 32463:32464 <> a1:153
binder 32466:32467 <> a2:154
ind 32671:32676 aevalR_extended aevalR
constr 32707:32711 aevalR_extended E_Any
constr 32784:32789 aevalR_extended E_ANum
constr 32828:32834 aevalR_extended E_APlus
constr 32935:32942 aevalR_extended E_AMinus
constr 33044:33050 aevalR_extended E_AMult
R32684:32687 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32680:32683 LF.Imp aevalR_extended aexp ind
R32691:32694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32688:32690 Coq.Init.Datatypes <> nat ind
R33170:33175 LF.Imp <> aevalR:156 ind
R32718:32720 Coq.Init.Datatypes <> nat ind
binder 32714:32714 <> n:157
R32735:32739 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R32731:32734 LF.Imp aevalR_extended AAny constr
R32740:32740 LF.Imp <> n:157 var
R32796:32798 Coq.Init.Datatypes <> nat ind
binder 32792:32792 <> n:158
R32809:32809 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R32816:32821 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R32810:32813 LF.Imp aevalR_extended ANum constr
R32815:32815 LF.Imp <> n:158 var
R32822:32822 LF.Imp <> n:158 var
R32845:32848 LF.Imp aevalR_extended aexp ind
binder 32837:32838 <> a1:159
binder 32840:32841 <> a2:160
R32860:32862 Coq.Init.Datatypes <> nat ind
binder 32852:32853 <> n1:161
binder 32855:32856 <> n2:162
R32873:32873 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32883:32887 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32876:32880 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R32874:32875 LF.Imp <> a1:159 var
R32881:32882 LF.Imp <> n1:161 var
R32888:32888 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32898:32902 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32891:32895 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R32889:32890 LF.Imp <> a2:160 var
R32896:32897 LF.Imp <> n2:162 var
R32903:32903 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R32915:32921 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R32929:32929 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R32904:32908 LF.Imp aevalR_extended APlus constr
R32910:32911 LF.Imp <> a1:159 var
R32913:32914 LF.Imp <> a2:160 var
R32924:32926 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R32922:32923 LF.Imp <> n1:161 var
R32927:32928 LF.Imp <> n2:162 var
R32953:32956 LF.Imp aevalR_extended aexp ind
binder 32945:32946 <> a1:163
binder 32948:32949 <> a2:164
R32968:32970 Coq.Init.Datatypes <> nat ind
binder 32960:32961 <> n1:165
binder 32963:32964 <> n2:166
R32981:32981 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32991:32995 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32984:32988 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R32982:32983 LF.Imp <> a1:163 var
R32989:32990 LF.Imp <> n1:165 var
R32996:32996 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33006:33010 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32999:33003 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R32997:32998 LF.Imp <> a2:164 var
R33004:33005 LF.Imp <> n2:166 var
R33011:33011 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33024:33030 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33038:33038 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33012:33017 LF.Imp aevalR_extended AMinus constr
R33019:33020 LF.Imp <> a1:163 var
R33022:33023 LF.Imp <> a2:164 var
R33033:33035 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R33031:33032 LF.Imp <> n1:165 var
R33036:33037 LF.Imp <> n2:166 var
R33061:33064 LF.Imp aevalR_extended aexp ind
binder 33053:33054 <> a1:167
binder 33056:33057 <> a2:168
R33076:33078 Coq.Init.Datatypes <> nat ind
binder 33068:33069 <> n1:169
binder 33071:33072 <> n2:170
R33089:33089 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33099:33103 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33092:33096 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33090:33091 LF.Imp <> a1:167 var
R33097:33098 LF.Imp <> n1:169 var
R33104:33104 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33114:33118 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33107:33111 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33105:33106 LF.Imp <> a2:168 var
R33112:33113 LF.Imp <> n2:170 var
R33119:33119 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33131:33137 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33145:33145 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R33120:33124 LF.Imp aevalR_extended AMult constr
R33126:33127 LF.Imp <> a1:167 var
R33129:33130 LF.Imp <> a2:168 var
R33140:33142 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R33138:33139 LF.Imp <> n1:169 var
R33143:33144 LF.Imp <> n2:170 var
R33170:33175 LF.Imp aevalR_extended aevalR ind
not 33154:33154 aevalR_extended ::type_scope:x_'==>'_x
R33201:33215 LF.Imp aevalR_extended <> mod
def 35846:35850 <> state
R35855:35863 LF.Maps <> total_map def
R35865:35867 Coq.Init.Datatypes <> nat ind
ind 36091:36094 <> aexp
constr 36110:36113 <> ANum
constr 36129:36131 <> AId
constr 36178:36182 <> APlus
constr 36203:36208 <> AMinus
constr 36229:36233 <> AMult
R36120:36122 Coq.Init.Datatypes <> nat ind
binder 36116:36116 <> n:173
R36138:36143 Coq.Strings.String <> string ind
binder 36134:36134 <> x:174
R36193:36196 LF.Imp <> aexp:171 ind
binder 36185:36186 <> a1:175
binder 36188:36189 <> a2:176
R36219:36222 LF.Imp <> aexp:171 ind
binder 36211:36212 <> a1:177
binder 36214:36215 <> a2:178
R36244:36247 LF.Imp <> aexp:171 ind
binder 36236:36237 <> a1:179
binder 36239:36240 <> a2:180
def 36365:36365 <> W
R36369:36374 Coq.Strings.String <> string ind
def 36395:36395 <> X
R36399:36404 Coq.Strings.String <> string ind
def 36425:36425 <> Y
R36429:36434 Coq.Strings.String <> string ind
def 36455:36455 <> Z
R36459:36464 Coq.Strings.String <> string ind
ind 36857:36860 <> bexp
constr 36876:36880 <> BTrue
constr 36886:36891 <> BFalse
constr 36897:36899 <> BEq
constr 36920:36923 <> BNeq
constr 36944:36946 <> BLe
constr 36967:36969 <> BGt
constr 36990:36993 <> BNot
constr 37010:37013 <> BAnd
R36910:36913 LF.Imp <> aexp ind
binder 36902:36903 <> a1:183
binder 36905:36906 <> a2:184
R36934:36937 LF.Imp <> aexp ind
binder 36926:36927 <> a1:185
binder 36929:36930 <> a2:186
R36957:36960 LF.Imp <> aexp ind
binder 36949:36950 <> a1:187
binder 36952:36953 <> a2:188
R36980:36983 LF.Imp <> aexp ind
binder 36972:36973 <> a1:189
binder 36975:36976 <> a2:190
R37000:37003 LF.Imp <> bexp:181 ind
binder 36996:36996 <> b:191
R37024:37027 LF.Imp <> bexp:181 ind
binder 37016:37017 <> b1:192
binder 37019:37020 <> b2:193
R38273:38302 LF.Imp <> AId constr
R38305:38332 LF.Imp <> ANum constr
not 38397:38397 <> ::com_scope:'<{'_x_'}>'
not 38473:38473 <> :com:com_scope:'('_x_')'
not 38539:38539 <> :com:com_scope:x
not 38618:38618 <> :com:com_scope:x_x_'..'_x
R38842:38846 LF.Imp <> APlus constr
not 38828:38828 <> :com::x_'+'_x
R38925:38930 LF.Imp <> AMinus constr
not 38911:38911 <> :com::x_'-'_x
R39009:39013 LF.Imp <> AMult constr
not 38995:38995 <> :com::x_'*'_x
R39091:39094 Coq.Init.Datatypes <> true constr
not 39078:39078 <> :::'true'
R39132:39136 LF.Imp <> BTrue constr
not 39119:39119 <> :com::'true'
R39188:39192 Coq.Init.Datatypes <> false constr
not 39175:39175 <> :::'false'
R39230:39235 LF.Imp <> BFalse constr
not 39217:39217 <> :com::'false'
R39288:39290 LF.Imp <> BLe constr
not 39274:39274 <> :com::x_'<='_x
R39367:39369 LF.Imp <> BGt constr
not 39353:39353 <> :com::x_'>'_x
R39446:39448 LF.Imp <> BEq constr
not 39432:39432 <> :com::x_'='_x
R39525:39528 LF.Imp <> BNeq constr
not 39511:39511 <> :com::x_'<>'_x
R39605:39608 LF.Imp <> BAnd constr
not 39591:39591 <> :com::x_'&&'_x
R39687:39690 LF.Imp <> BNot constr
not 39673:39673 <> :com::'~'_x
def 39923:39934 <> example_aexp
R39938:39941 LF.Imp <> aexp ind
R39946:39948 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R39960:39962 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R39950:39952 LF.Imp <> :com::x_'+'_x not
R39953:39953 LF.Imp <> :com:com_scope:'('_x_')' not
R39959:39959 LF.Imp <> :com:com_scope:'('_x_')' not
R39955:39957 LF.Imp <> :com::x_'*'_x not
R39954:39954 LF.Imp <> X def
def 39976:39987 <> example_bexp
R39991:39994 LF.Imp <> bexp ind
R39999:40001 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40019:40021 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40006:40009 LF.Imp <> :com::x_'&&'_x not
R40002:40005 LF.Imp <> :com::'true' not
R40010:40010 LF.Imp <> :com::'~'_x not
R40011:40011 LF.Imp <> :com:com_scope:'('_x_')' not
R40018:40018 LF.Imp <> :com:com_scope:'('_x_')' not
R40013:40016 LF.Imp <> :com::x_'<='_x not
R40012:40012 LF.Imp <> X def
def 40280:40284 <> aeval
R40292:40296 LF.Imp <> state def
binder 40287:40288 <> st:194
R40319:40322 LF.Imp <> aexp ind
binder 40315:40315 <> a:195
R40327:40329 Coq.Init.Datatypes <> nat ind
R40342:40342 LF.Imp <> a:195 var
R40353:40356 LF.Imp <> ANum constr
R40369:40371 LF.Imp <> AId constr
R40378:40379 LF.Imp <> st:194 var
R40433:40434 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40442:40443 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40437:40439 LF.Imp <> :com::x_'+'_x not
R40448:40448 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R40460:40464 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R40476:40476 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R40449:40453 LF.Imp <> aeval:196 def
R40455:40456 LF.Imp <> st:194 var
R40465:40469 LF.Imp <> aeval:196 def
R40471:40472 LF.Imp <> st:194 var
R40482:40483 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40491:40492 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40486:40488 LF.Imp <> :com::x_'-'_x not
R40497:40497 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R40509:40513 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R40525:40525 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R40498:40502 LF.Imp <> aeval:196 def
R40504:40505 LF.Imp <> st:194 var
R40514:40518 LF.Imp <> aeval:196 def
R40520:40521 LF.Imp <> st:194 var
R40531:40532 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40540:40541 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40535:40537 LF.Imp <> :com::x_'*'_x not
R40546:40546 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R40558:40562 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R40574:40574 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R40547:40551 LF.Imp <> aeval:196 def
R40553:40554 LF.Imp <> st:194 var
R40563:40567 LF.Imp <> aeval:196 def
R40569:40570 LF.Imp <> st:194 var
def 40593:40597 <> beval
R40605:40609 LF.Imp <> state def
binder 40600:40601 <> st:198
R40632:40635 LF.Imp <> bexp ind
binder 40628:40628 <> b:199
R40640:40643 Coq.Init.Datatypes <> bool ind
R40656:40656 LF.Imp <> b:199 var
R40667:40668 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40673:40674 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40669:40672 LF.Imp <> :com::'true' not
R40684:40687 LF.Imp <> :::'true' not
R40693:40694 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40700:40701 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40695:40699 LF.Imp <> :com::'false' not
R40710:40714 LF.Imp <> :::'false' not
R40720:40721 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40729:40730 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40724:40726 LF.Imp <> :com::x_'='_x not
R40737:40737 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R40749:40754 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R40766:40766 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R40738:40742 LF.Imp <> aeval def
R40744:40745 LF.Imp <> st:198 var
R40755:40759 LF.Imp <> aeval def
R40761:40762 LF.Imp <> st:198 var
R40772:40773 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40782:40783 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40776:40779 LF.Imp <> :com::x_'<>'_x not
R40789:40792 Coq.Init.Datatypes <> negb def
R40795:40795 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R40807:40812 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R40824:40824 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R40796:40800 LF.Imp <> aeval def
R40802:40803 LF.Imp <> st:198 var
R40813:40817 LF.Imp <> aeval def
R40819:40820 LF.Imp <> st:198 var
R40831:40832 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40841:40842 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40835:40838 LF.Imp <> :com::x_'<='_x not
R40848:40848 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R40860:40866 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R40878:40878 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R40849:40853 LF.Imp <> aeval def
R40855:40856 LF.Imp <> st:198 var
R40867:40871 LF.Imp <> aeval def
R40873:40874 LF.Imp <> st:198 var
R40884:40885 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40893:40894 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40888:40890 LF.Imp <> :com::x_'>'_x not
R40901:40904 Coq.Init.Datatypes <> negb def
R40907:40907 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R40919:40925 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R40937:40937 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R40908:40912 LF.Imp <> aeval def
R40914:40915 LF.Imp <> st:198 var
R40926:40930 LF.Imp <> aeval def
R40932:40933 LF.Imp <> st:198 var
R40944:40945 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40950:40951 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40946:40947 LF.Imp <> :com::'~'_x not
R40961:40964 Coq.Init.Datatypes <> negb def
R40967:40971 LF.Imp <> beval:200 def
R40973:40974 LF.Imp <> st:198 var
R40984:40985 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40994:40995 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R40988:40991 LF.Imp <> :com::x_'&&'_x not
R41001:41004 Coq.Init.Datatypes <> andb def
R41021:41025 LF.Imp <> beval:200 def
R41027:41028 LF.Imp <> st:198 var
R41007:41011 LF.Imp <> beval:200 def
R41013:41014 LF.Imp <> st:198 var
def 41185:41192 <> empty_st
R41198:41203 LF.Maps <> :::'''_'''_'!->'_x not
R41339:41343 LF.Maps <> :::x_'!->'_x_';'_x not
R41345:41347 LF.Maps <> :::x_'!->'_x_';'_x not
R41348:41355 LF.Imp <> empty_st def
not 41322:41322 <> :::x_'!->'_x
def 41383:41387 <> aexp1
R41428:41432 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41395:41399 LF.Imp <> aeval def
R41403:41407 LF.Imp <> :::x_'!->'_x not
R41402:41402 LF.Imp <> X def
R41411:41413 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R41425:41427 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R41415:41417 LF.Imp <> :com::x_'+'_x not
R41418:41418 LF.Imp <> :com:com_scope:'('_x_')' not
R41424:41424 LF.Imp <> :com:com_scope:'('_x_')' not
R41420:41422 LF.Imp <> :com::x_'*'_x not
R41419:41419 LF.Imp <> X def
def 41471:41475 <> aexp2
R41526:41530 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41483:41487 LF.Imp <> aeval def
R41491:41495 LF.Maps <> :::x_'!->'_x_';'_x not
R41497:41499 LF.Maps <> :::x_'!->'_x_';'_x not
R41501:41505 LF.Imp <> :::x_'!->'_x not
R41500:41500 LF.Imp <> Y def
R41490:41490 LF.Imp <> X def
R41509:41511 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R41523:41525 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R41513:41515 LF.Imp <> :com::x_'+'_x not
R41512:41512 LF.Imp <> Z def
R41516:41516 LF.Imp <> :com:com_scope:'('_x_')' not
R41522:41522 LF.Imp <> :com:com_scope:'('_x_')' not
R41518:41520 LF.Imp <> :com::x_'*'_x not
R41517:41517 LF.Imp <> X def
R41521:41521 LF.Imp <> Y def
def 41569:41573 <> bexp1
R41620:41624 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41581:41585 LF.Imp <> beval def
R41589:41593 LF.Imp <> :::x_'!->'_x not
R41588:41588 LF.Imp <> X def
R41597:41599 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R41617:41619 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R41604:41607 LF.Imp <> :com::x_'&&'_x not
R41600:41603 LF.Imp <> :com::'true' not
R41608:41608 LF.Imp <> :com::'~'_x not
R41609:41609 LF.Imp <> :com:com_scope:'('_x_')' not
R41616:41616 LF.Imp <> :com:com_scope:'('_x_')' not
R41611:41614 LF.Imp <> :com::x_'<='_x not
R41610:41610 LF.Imp <> X def
R41625:41628 LF.Imp <> :::'true' not
ind 42190:42192 <> com
constr 42208:42212 <> CSkip
constr 42218:42222 <> CAsgn
constr 42252:42255 <> CSeq
constr 42275:42277 <> CIf
constr 42308:42313 <> CWhile
R42229:42234 Coq.Strings.String <> string ind
binder 42225:42225 <> x:204
R42242:42245 LF.Imp <> aexp ind
binder 42238:42238 <> a:205
R42266:42268 LF.Imp <> com:202 ind
binder 42258:42259 <> c1:206
binder 42261:42262 <> c2:207
R42284:42287 LF.Imp <> bexp ind
binder 42280:42280 <> b:208
R42299:42301 LF.Imp <> com:202 ind
binder 42291:42292 <> c1:209
binder 42294:42295 <> c2:210
R42320:42323 LF.Imp <> bexp ind
binder 42316:42316 <> b:211
R42331:42333 LF.Imp <> com:202 ind
binder 42327:42327 <> c:212
R42511:42515 LF.Imp <> CSkip constr
not 42489:42489 <> :com:com_scope:'skip'
R42589:42593 LF.Imp <> CAsgn constr
not 42566:42566 <> :com:com_scope:x_':='_x
R42749:42752 LF.Imp <> CSeq constr
not 42728:42728 <> :com:com_scope:x_';'_x
R42887:42889 LF.Imp <> CIf constr
not 42841:42841 <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end'
R43054:43059 LF.Imp <> CWhile constr
not 43016:43016 <> :com:com_scope:'while'_x_'do'_x_'end'
def 43368:43378 <> fact_in_coq
R43382:43384 LF.Imp <> com ind
R43391:43393 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43481:43483 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43400:43406 LF.Imp <> :com:com_scope:x_';'_x not
R43395:43398 LF.Imp <> :com:com_scope:x_':='_x not
R43394:43394 LF.Imp <> Z def
R43399:43399 LF.Imp <> X def
R43413:43419 LF.Imp <> :com:com_scope:x_';'_x not
R43408:43411 LF.Imp <> :com:com_scope:x_':='_x not
R43407:43407 LF.Imp <> Y def
R43420:43425 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R43432:43442 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R43472:43480 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R43427:43430 LF.Imp <> :com::x_'<>'_x not
R43426:43426 LF.Imp <> Z def
R43453:43461 LF.Imp <> :com:com_scope:x_';'_x not
R43444:43447 LF.Imp <> :com:com_scope:x_':='_x not
R43443:43443 LF.Imp <> Y def
R43449:43451 LF.Imp <> :com::x_'*'_x not
R43448:43448 LF.Imp <> Y def
R43452:43452 LF.Imp <> Z def
R43463:43466 LF.Imp <> :com:com_scope:x_':='_x not
R43462:43462 LF.Imp <> Z def
R43468:43470 LF.Imp <> :com::x_'-'_x not
R43467:43467 LF.Imp <> Z def
R43493:43503 LF.Imp <> fact_in_coq def
R44366:44376 LF.Imp <> fact_in_coq def
R44649:44660 LF.Imp <> example_bexp def
R44745:44756 LF.Imp <> example_bexp def
R44826:44836 LF.Imp <> fact_in_coq def
def 46905:46909 <> plus2
R46913:46915 LF.Imp <> com ind
R46922:46924 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R46935:46937 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R46926:46929 LF.Imp <> :com:com_scope:x_':='_x not
R46925:46925 LF.Imp <> X def
R46931:46933 LF.Imp <> :com::x_'+'_x not
R46930:46930 LF.Imp <> X def
def 46952:46961 <> XtimesYinZ
R46965:46967 LF.Imp <> com ind
R46974:46976 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R46987:46989 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R46978:46981 LF.Imp <> :com:com_scope:x_':='_x not
R46977:46977 LF.Imp <> Z def
R46983:46985 LF.Imp <> :com::x_'*'_x not
R46982:46982 LF.Imp <> X def
R46986:46986 LF.Imp <> Y def
def 47004:47023 <> subtract_slowly_body
R47027:47029 LF.Imp <> com ind
R47036:47038 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47067:47069 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47049:47056 LF.Imp <> :com:com_scope:x_';'_x not
R47040:47043 LF.Imp <> :com:com_scope:x_':='_x not
R47039:47039 LF.Imp <> Z def
R47045:47047 LF.Imp <> :com::x_'-'_x not
R47044:47044 LF.Imp <> Z def
R47058:47061 LF.Imp <> :com:com_scope:x_':='_x not
R47057:47057 LF.Imp <> X def
R47063:47065 LF.Imp <> :com::x_'-'_x not
R47062:47062 LF.Imp <> X def
def 47174:47188 <> subtract_slowly
R47192:47194 LF.Imp <> com ind
R47201:47203 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47256:47258 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47204:47209 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R47216:47226 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R47247:47255 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R47211:47214 LF.Imp <> :com::x_'<>'_x not
R47210:47210 LF.Imp <> X def
R47227:47246 LF.Imp <> subtract_slowly_body def
def 47273:47296 <> subtract_3_from_5_slowly
R47300:47302 LF.Imp <> com ind
R47309:47311 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47355:47357 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47318:47325 LF.Imp <> :com:com_scope:x_';'_x not
R47313:47316 LF.Imp <> :com:com_scope:x_':='_x not
R47312:47312 LF.Imp <> X def
R47332:47339 LF.Imp <> :com:com_scope:x_';'_x not
R47327:47330 LF.Imp <> :com:com_scope:x_':='_x not
R47326:47326 LF.Imp <> Z def
R47340:47354 LF.Imp <> subtract_slowly def
def 47474:47477 <> loop
R47481:47483 LF.Imp <> com ind
R47490:47492 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47527:47529 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R47493:47498 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R47503:47513 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R47518:47526 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R47499:47502 LF.Imp <> :com::'true' not
R47514:47517 LF.Imp <> :com:com_scope:'skip' not
def 48060:48077 <> ceval_fun_no_while
R48085:48089 LF.Imp <> state def
binder 48080:48081 <> st:213
R48097:48099 LF.Imp <> com ind
binder 48093:48093 <> c:214
R48104:48108 LF.Imp <> state def
R48121:48121 LF.Imp <> c:214 var
R48134:48136 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48141:48143 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48137:48140 LF.Imp <> :com:com_scope:'skip' not
R48156:48157 LF.Imp <> st:213 var
R48165:48167 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48174:48176 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48169:48172 LF.Imp <> :com:com_scope:x_':='_x not
R48191:48196 LF.Maps <> :::x_'!->'_x_';'_x not
R48207:48210 LF.Maps <> :::x_'!->'_x_';'_x not
R48211:48212 LF.Imp <> st:213 var
R48197:48201 LF.Imp <> aeval def
R48203:48204 LF.Imp <> st:213 var
R48221:48223 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48231:48233 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48226:48228 LF.Imp <> :com:com_scope:x_';'_x not
R48257:48274 LF.Imp <> ceval_fun_no_while:215 def
R48276:48277 LF.Imp <> st:213 var
binder 48250:48252 <> st':217
R48293:48310 LF.Imp <> ceval_fun_no_while:215 def
R48312:48314 LF.Imp <> st':217 var
R48325:48327 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48352:48353 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48328:48330 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R48332:48337 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R48340:48345 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R48348:48351 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R48370:48374 LF.Imp <> beval def
R48376:48377 LF.Imp <> st:213 var
R48437:48454 LF.Imp <> ceval_fun_no_while:215 def
R48456:48457 LF.Imp <> st:213 var
R48397:48414 LF.Imp <> ceval_fun_no_while:215 def
R48416:48417 LF.Imp <> st:213 var
R48468:48470 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48487:48489 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R48471:48476 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R48478:48481 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R48483:48486 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R48502:48503 LF.Imp <> st:213 var
ind 52818:52822 <> ceval
constr 52863:52868 <> E_Skip
constr 52911:52916 <> E_Asgn
constr 53004:53008 <> E_Seq
constr 53128:53135 <> E_IfTrue
constr 53263:53271 <> E_IfFalse
constr 53400:53411 <> E_WhileFalse
constr 53498:53508 <> E_WhileTrue
R52829:52832 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52826:52828 LF.Imp <> com ind
R52838:52841 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52833:52837 LF.Imp <> state def
R52847:52850 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52842:52846 LF.Imp <> state def
R53701:53705 LF.Imp <> ceval:219 ind
binder 52879:52880 <> st:220
R52891:52894 LF.Imp <> :::x_'=['_x_']=>'_x not
R52899:52903 LF.Imp <> :::x_'=['_x_']=>'_x not
R52895:52898 LF.Imp <> :com:com_scope:'skip' not
R52889:52890 LF.Imp <> st:220 var
R52904:52905 LF.Imp <> st:220 var
binder 52928:52929 <> st:221
binder 52931:52931 <> a:222
binder 52933:52933 <> n:223
binder 52935:52935 <> x:224
R52958:52967 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52954:52956 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52944:52948 LF.Imp <> aeval def
R52950:52951 LF.Imp <> st:221 var
R52953:52953 LF.Imp <> a:222 var
R52957:52957 LF.Imp <> n:223 var
R52970:52973 LF.Imp <> :::x_'=['_x_']=>'_x not
R52980:52985 LF.Imp <> :::x_'=['_x_']=>'_x not
R52998:52998 LF.Imp <> :::x_'=['_x_']=>'_x not
R52975:52978 LF.Imp <> :com:com_scope:x_':='_x not
R52974:52974 LF.Imp <> x:224 var
R52979:52979 LF.Imp <> a:222 var
R52968:52969 LF.Imp <> st:221 var
R52987:52991 LF.Maps <> :::x_'!->'_x_';'_x not
R52993:52995 LF.Maps <> :::x_'!->'_x_';'_x not
R52996:52997 LF.Imp <> st:221 var
R52986:52986 LF.Imp <> x:224 var
R52992:52992 LF.Imp <> n:223 var
binder 53019:53020 <> c1:225
binder 53022:53023 <> c2:226
binder 53025:53026 <> st:227
binder 53028:53030 <> st':228
binder 53032:53035 <> st'':229
R53061:53071 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53046:53050 LF.Imp <> :::x_'=['_x_']=>'_x not
R53053:53057 LF.Imp <> :::x_'=['_x_']=>'_x not
R53051:53052 LF.Imp <> c1:225 var
R53044:53045 LF.Imp <> st:227 var
R53058:53060 LF.Imp <> st':228 var
R53090:53099 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53075:53078 LF.Imp <> :::x_'=['_x_']=>'_x not
R53081:53085 LF.Imp <> :::x_'=['_x_']=>'_x not
R53079:53080 LF.Imp <> c2:226 var
R53072:53074 LF.Imp <> st':228 var
R53086:53089 LF.Imp <> st'':229 var
R53102:53106 LF.Imp <> :::x_'=['_x_']=>'_x not
R53114:53118 LF.Imp <> :::x_'=['_x_']=>'_x not
R53109:53111 LF.Imp <> :com:com_scope:x_';'_x not
R53107:53108 LF.Imp <> c1:225 var
R53112:53113 LF.Imp <> c2:226 var
R53100:53101 LF.Imp <> st:227 var
R53119:53122 LF.Imp <> st'':229 var
binder 53146:53147 <> st:230
binder 53149:53151 <> st':231
binder 53153:53153 <> b:232
binder 53155:53156 <> c1:233
binder 53158:53159 <> c2:234
R53185:53194 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53178:53180 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53168:53172 LF.Imp <> beval def
R53174:53175 LF.Imp <> st:230 var
R53177:53177 LF.Imp <> b:232 var
R53181:53184 LF.Imp <> :::'true' not
R53211:53220 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53197:53200 LF.Imp <> :::x_'=['_x_']=>'_x not
R53203:53207 LF.Imp <> :::x_'=['_x_']=>'_x not
R53201:53202 LF.Imp <> c1:233 var
R53195:53196 LF.Imp <> st:230 var
R53208:53210 LF.Imp <> st':231 var
R53223:53226 LF.Imp <> :::x_'=['_x_']=>'_x not
R53251:53254 LF.Imp <> :::x_'=['_x_']=>'_x not
R53227:53229 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R53231:53236 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R53239:53244 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R53247:53250 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R53230:53230 LF.Imp <> b:232 var
R53237:53238 LF.Imp <> c1:233 var
R53245:53246 LF.Imp <> c2:234 var
R53221:53222 LF.Imp <> st:230 var
R53255:53257 LF.Imp <> st':231 var
binder 53282:53283 <> st:235
binder 53285:53287 <> st':236
binder 53289:53289 <> b:237
binder 53291:53292 <> c1:238
binder 53294:53295 <> c2:239
R53322:53331 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53314:53316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53304:53308 LF.Imp <> beval def
R53310:53311 LF.Imp <> st:235 var
R53313:53313 LF.Imp <> b:237 var
R53317:53321 LF.Imp <> :::'false' not
R53348:53357 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53334:53337 LF.Imp <> :::x_'=['_x_']=>'_x not
R53340:53344 LF.Imp <> :::x_'=['_x_']=>'_x not
R53338:53339 LF.Imp <> c2:239 var
R53332:53333 LF.Imp <> st:235 var
R53345:53347 LF.Imp <> st':236 var
R53360:53363 LF.Imp <> :::x_'=['_x_']=>'_x not
R53388:53391 LF.Imp <> :::x_'=['_x_']=>'_x not
R53364:53366 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R53368:53373 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R53376:53381 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R53384:53387 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R53367:53367 LF.Imp <> b:237 var
R53374:53375 LF.Imp <> c1:238 var
R53382:53383 LF.Imp <> c2:239 var
R53358:53359 LF.Imp <> st:235 var
R53392:53394 LF.Imp <> st':236 var
binder 53422:53422 <> b:240
binder 53424:53425 <> st:241
binder 53427:53427 <> c:242
R53454:53463 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53446:53448 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53436:53440 LF.Imp <> beval def
R53442:53443 LF.Imp <> st:241 var
R53445:53445 LF.Imp <> b:240 var
R53449:53453 LF.Imp <> :::'false' not
R53466:53469 LF.Imp <> :::x_'=['_x_']=>'_x not
R53486:53490 LF.Imp <> :::x_'=['_x_']=>'_x not
R53470:53475 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R53477:53480 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R53482:53485 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R53476:53476 LF.Imp <> b:240 var
R53481:53481 LF.Imp <> c:242 var
R53464:53465 LF.Imp <> st:241 var
R53491:53492 LF.Imp <> st:241 var
binder 53519:53520 <> st:243
binder 53522:53524 <> st':244
binder 53526:53529 <> st'':245
binder 53531:53531 <> b:246
binder 53533:53533 <> c:247
R53559:53568 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53552:53554 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53542:53546 LF.Imp <> beval def
R53548:53549 LF.Imp <> st:243 var
R53551:53551 LF.Imp <> b:246 var
R53555:53558 LF.Imp <> :::'true' not
R53585:53594 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53571:53575 LF.Imp <> :::x_'=['_x_']=>'_x not
R53577:53581 LF.Imp <> :::x_'=['_x_']=>'_x not
R53576:53576 LF.Imp <> c:247 var
R53569:53570 LF.Imp <> st:243 var
R53582:53584 LF.Imp <> st':244 var
R53627:53636 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53598:53601 LF.Imp <> :::x_'=['_x_']=>'_x not
R53618:53622 LF.Imp <> :::x_'=['_x_']=>'_x not
R53602:53607 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R53609:53612 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R53614:53617 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R53608:53608 LF.Imp <> b:246 var
R53613:53613 LF.Imp <> c:247 var
R53595:53597 LF.Imp <> st':244 var
R53623:53626 LF.Imp <> st'':245 var
R53639:53643 LF.Imp <> :::x_'=['_x_']=>'_x not
R53660:53664 LF.Imp <> :::x_'=['_x_']=>'_x not
R53644:53649 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R53651:53654 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R53656:53659 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R53650:53650 LF.Imp <> b:246 var
R53655:53655 LF.Imp <> c:247 var
R53637:53638 LF.Imp <> st:243 var
R53665:53668 LF.Imp <> st'':245 var
R53701:53705 LF.Imp <> ceval ind
not 53679:53679 <> :::x_'=['_x_']=>'_x
def 53974:53987 <> ceval_example1
R54000:54008 LF.Imp <> :::x_'=['_x_']=>'_x not
R54080:54087 LF.Imp <> :::x_'=['_x_']=>'_x not
R54105:54105 LF.Imp <> :::x_'=['_x_']=>'_x not
R54015:54021 LF.Imp <> :com:com_scope:x_';'_x not
R54010:54013 LF.Imp <> :com:com_scope:x_':='_x not
R54009:54009 LF.Imp <> X def
R54022:54024 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54033:54045 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54052:54064 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54071:54079 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R54025:54025 LF.Imp <> :com:com_scope:'('_x_')' not
R54032:54032 LF.Imp <> :com:com_scope:'('_x_')' not
R54027:54030 LF.Imp <> :com::x_'<='_x not
R54026:54026 LF.Imp <> X def
R54047:54050 LF.Imp <> :com:com_scope:x_':='_x not
R54046:54046 LF.Imp <> Y def
R54066:54069 LF.Imp <> :com:com_scope:x_':='_x not
R54065:54065 LF.Imp <> Z def
R53992:53999 LF.Imp <> empty_st def
R54089:54093 LF.Maps <> :::x_'!->'_x_';'_x not
R54095:54097 LF.Maps <> :::x_'!->'_x_';'_x not
R54099:54103 LF.Imp <> :::x_'!->'_x not
R54098:54098 LF.Imp <> X def
R54088:54088 LF.Imp <> Z def
R54182:54186 LF.Imp <> :::x_'!->'_x not
R54181:54181 LF.Imp <> X def
R54169:54173 LF.Imp <> E_Seq constr
R54182:54186 LF.Imp <> :::x_'!->'_x not
R54181:54181 LF.Imp <> X def
R54169:54173 LF.Imp <> E_Seq constr
R54230:54235 LF.Imp <> E_Asgn constr
R54230:54235 LF.Imp <> E_Asgn constr
R54282:54290 LF.Imp <> E_IfFalse constr
R54282:54290 LF.Imp <> E_IfFalse constr
R54320:54325 LF.Imp <> E_Asgn constr
R54320:54325 LF.Imp <> E_Asgn constr
def 54412:54425 <> ceval_example2
R54438:54445 LF.Imp <> :::x_'=['_x_']=>'_x not
R54476:54483 LF.Imp <> :::x_'=['_x_']=>'_x not
R54511:54511 LF.Imp <> :::x_'=['_x_']=>'_x not
R54452:54457 LF.Imp <> :com:com_scope:x_';'_x not
R54447:54450 LF.Imp <> :com:com_scope:x_':='_x not
R54446:54446 LF.Imp <> X def
R54464:54469 LF.Imp <> :com:com_scope:x_';'_x not
R54459:54462 LF.Imp <> :com:com_scope:x_':='_x not
R54458:54458 LF.Imp <> Y def
R54471:54474 LF.Imp <> :com:com_scope:x_':='_x not
R54470:54470 LF.Imp <> Z def
R54430:54437 LF.Imp <> empty_st def
R54485:54489 LF.Maps <> :::x_'!->'_x_';'_x not
R54491:54493 LF.Maps <> :::x_'!->'_x_';'_x not
R54495:54499 LF.Maps <> :::x_'!->'_x_';'_x not
R54501:54503 LF.Maps <> :::x_'!->'_x_';'_x not
R54505:54509 LF.Imp <> :::x_'!->'_x not
R54504:54504 LF.Imp <> X def
R54494:54494 LF.Imp <> Y def
R54484:54484 LF.Imp <> Z def
R54593:54606 LF.Imp <> ceval_example2 prfax
def 55017:55024 <> pup_to_n
R55028:55030 LF.Imp <> com ind
prf 55108:55121 <> pup_to_2_ceval
R55127:55127 LF.Imp <> :::x_'=['_x_']=>'_x not
R55135:55143 LF.Imp <> :::x_'=['_x_']=>'_x not
R55152:55159 LF.Imp <> :::x_'=['_x_']=>'_x not
R55217:55217 LF.Imp <> :::x_'=['_x_']=>'_x not
R55144:55151 LF.Imp <> pup_to_n prfax
R55129:55133 LF.Imp <> :::x_'!->'_x not
R55128:55128 LF.Imp <> X def
R55161:55165 LF.Maps <> :::x_'!->'_x_';'_x not
R55167:55169 LF.Maps <> :::x_'!->'_x_';'_x not
R55171:55175 LF.Maps <> :::x_'!->'_x_';'_x not
R55177:55179 LF.Maps <> :::x_'!->'_x_';'_x not
R55181:55185 LF.Maps <> :::x_'!->'_x_';'_x not
R55187:55189 LF.Maps <> :::x_'!->'_x_';'_x not
R55191:55195 LF.Maps <> :::x_'!->'_x_';'_x not
R55197:55199 LF.Maps <> :::x_'!->'_x_';'_x not
R55201:55205 LF.Maps <> :::x_'!->'_x_';'_x not
R55207:55209 LF.Maps <> :::x_'!->'_x_';'_x not
R55211:55215 LF.Imp <> :::x_'!->'_x not
R55210:55210 LF.Imp <> X def
R55200:55200 LF.Imp <> Y def
R55190:55190 LF.Imp <> Y def
R55180:55180 LF.Imp <> X def
R55170:55170 LF.Imp <> Y def
R55160:55160 LF.Imp <> X def
prf 55940:55958 <> ceval_deterministic
binder 55968:55968 <> c:248
binder 55970:55971 <> st:249
binder 55973:55975 <> st1:250
binder 55977:55979 <> st2:251
R56002:56011 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55989:55992 LF.Imp <> :::x_'=['_x_']=>'_x not
R55994:55998 LF.Imp <> :::x_'=['_x_']=>'_x not
R55993:55993 LF.Imp <> c:248 var
R55987:55988 LF.Imp <> st:249 var
R55999:56001 LF.Imp <> st1:250 var
R56027:56035 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56014:56017 LF.Imp <> :::x_'=['_x_']=>'_x not
R56019:56023 LF.Imp <> :::x_'=['_x_']=>'_x not
R56018:56018 LF.Imp <> c:248 var
R56012:56013 LF.Imp <> st:249 var
R56024:56026 LF.Imp <> st2:251 var
R56039:56041 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56036:56038 LF.Imp <> st1:250 var
R56042:56044 LF.Imp <> st2:251 var
prf 57424:57433 <> plus2_spec
binder 57444:57445 <> st:252
binder 57447:57447 <> n:253
binder 57449:57451 <> st':254
R57464:57469 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57460:57462 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57456:57457 LF.Imp <> st:252 var
R57459:57459 LF.Imp <> X def
R57463:57463 LF.Imp <> n:253 var
R57489:57494 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57472:57475 LF.Imp <> :::x_'=['_x_']=>'_x not
R57481:57485 LF.Imp <> :::x_'=['_x_']=>'_x not
R57476:57480 LF.Imp <> plus2 def
R57470:57471 LF.Imp <> st:252 var
R57486:57488 LF.Imp <> st':254 var
R57500:57502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57495:57497 LF.Imp <> st':254 var
R57499:57499 LF.Imp <> X def
R57504:57506 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R57503:57503 LF.Imp <> n:253 var
R57833:57843 LF.Maps <> t_update_eq prfax
R57833:57843 LF.Maps <> t_update_eq prfax
def 58047:58078 <> manual_grade_for_XtimesYinZ_spec
R58082:58087 Coq.Init.Datatypes <> option ind
R58093:58093 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58090:58092 Coq.Init.Datatypes <> nat ind
R58094:58099 Coq.Strings.String <> string ind
R58105:58108 Coq.Init.Datatypes <> None constr
prf 58208:58223 <> loop_never_stops
binder 58234:58235 <> st:255
binder 58237:58239 <> st':256
R58244:58245 Coq.Init.Logic <> ::type_scope:'~'_x not
R58264:58264 Coq.Init.Logic <> ::type_scope:'~'_x not
R58248:58251 LF.Imp <> :::x_'=['_x_']=>'_x not
R58256:58260 LF.Imp <> :::x_'=['_x_']=>'_x not
R58252:58255 LF.Imp <> loop def
R58246:58247 LF.Imp <> st:255 var
R58261:58263 LF.Imp <> st':256 var
R58305:58308 LF.Imp <> loop def
R58332:58334 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58357:58359 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58335:58340 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R58345:58348 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R58353:58356 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R58341:58344 LF.Imp <> :com::'true' not
R58349:58352 LF.Imp <> :com:com_scope:'skip' not
R58332:58334 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58357:58359 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58335:58340 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R58345:58348 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R58353:58356 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R58341:58344 LF.Imp <> :com::'true' not
R58349:58352 LF.Imp <> :com:com_scope:'skip' not
def 58759:58767 <> no_whiles
R58774:58776 LF.Imp <> com ind
binder 58770:58770 <> c:257
R58781:58784 Coq.Init.Datatypes <> bool ind
R58797:58797 LF.Imp <> c:257 var
R58808:58810 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58815:58817 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58811:58814 LF.Imp <> :com:com_scope:'skip' not
R58828:58831 LF.Imp <> :::'true' not
R58837:58839 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58846:58848 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58841:58844 LF.Imp <> :com:com_scope:x_':='_x not
R58859:58862 LF.Imp <> :::'true' not
R58868:58870 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58878:58880 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58873:58875 LF.Imp <> :com:com_scope:x_';'_x not
R58891:58894 Coq.Init.Datatypes <> andb def
R58912:58920 LF.Imp <> no_whiles:258 def
R58897:58905 LF.Imp <> no_whiles:258 def
R58930:58932 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58957:58959 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58933:58935 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R58937:58942 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R58945:58950 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R58953:58956 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R58970:58973 Coq.Init.Datatypes <> andb def
R58991:58999 LF.Imp <> no_whiles:258 def
R58976:58984 LF.Imp <> no_whiles:258 def
R59009:59011 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R59028:59030 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R59012:59017 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R59019:59022 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R59024:59027 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R59042:59046 LF.Imp <> :::'false' not
ind 59342:59351 <> no_whilesR
R59357:59360 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59354:59356 LF.Imp <> com ind
prf 59400:59412 <> no_whiles_eqv
binder 59424:59424 <> c:262
R59445:59449 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R59438:59440 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59427:59435 LF.Imp <> no_whiles def
R59437:59437 LF.Imp <> c:262 var
R59441:59444 LF.Imp <> :::'true' not
R59450:59459 LF.Imp <> no_whilesR ind
R59461:59461 LF.Imp <> c:262 var
def 59846:59883 <> manual_grade_for_no_whiles_terminating
R59887:59892 Coq.Init.Datatypes <> option ind
R59898:59898 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59895:59897 Coq.Init.Datatypes <> nat ind
R59899:59904 Coq.Strings.String <> string ind
R59910:59913 Coq.Init.Datatypes <> None constr
ind 61453:61458 <> sinstr
constr 61472:61476 <> SPush
constr 61490:61494 <> SLoad
constr 61511:61515 <> SPlus
constr 61519:61524 <> SMinus
constr 61528:61532 <> SMult
R61483:61485 Coq.Init.Datatypes <> nat ind
binder 61479:61479 <> n:265
R61501:61506 Coq.Strings.String <> string ind
binder 61497:61497 <> x:266
def 62306:62314 <> s_execute
R62322:62326 LF.Imp <> state def
binder 62317:62318 <> st:267
R62338:62341 Coq.Init.Datatypes <> list ind
R62343:62345 Coq.Init.Datatypes <> nat ind
binder 62330:62334 <> stack:268
R62375:62378 Coq.Init.Datatypes <> list ind
R62380:62385 LF.Imp <> sinstr ind
binder 62368:62371 <> prog:269
R62407:62410 Coq.Init.Datatypes <> list ind
R62412:62414 Coq.Init.Datatypes <> nat ind
R62490:62498 LF.Imp <> s_execute prfax
def 62510:62519 <> s_execute1
R62592:62597 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62528:62536 LF.Imp <> s_execute prfax
R62538:62545 LF.Imp <> empty_st def
R62547:62548 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R62557:62557 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62565:62566 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62574:62575 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62583:62584 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62591:62591 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62558:62562 LF.Imp <> SPush constr
R62567:62571 LF.Imp <> SPush constr
R62576:62580 LF.Imp <> SPush constr
R62585:62590 LF.Imp <> SMinus constr
R62598:62598 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62600:62601 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62603:62603 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 62644:62653 <> s_execute2
R62727:62732 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62662:62670 LF.Imp <> s_execute prfax
R62674:62678 LF.Imp <> :::x_'!->'_x not
R62673:62673 LF.Imp <> X def
R62682:62682 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62684:62684 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62686:62686 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62695:62695 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62703:62704 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62712:62713 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62719:62720 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62726:62726 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62696:62700 LF.Imp <> SPush constr
R62705:62709 LF.Imp <> SLoad constr
R62711:62711 LF.Imp <> X def
R62714:62718 LF.Imp <> SMult constr
R62721:62725 LF.Imp <> SPlus constr
R62733:62733 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62736:62737 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R62739:62739 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 62980:62988 <> s_compile
R62995:62998 LF.Imp <> aexp ind
binder 62991:62991 <> e:271
R63003:63006 Coq.Init.Datatypes <> list ind
R63008:63013 LF.Imp <> sinstr ind
def 63180:63189 <> s_compile1
R63222:63226 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63195:63203 LF.Imp <> s_compile prfax
R63205:63207 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63219:63221 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63209:63211 LF.Imp <> :com::x_'-'_x not
R63208:63208 LF.Imp <> X def
R63212:63212 LF.Imp <> :com:com_scope:'('_x_')' not
R63218:63218 LF.Imp <> :com:com_scope:'('_x_')' not
R63214:63216 LF.Imp <> :com::x_'*'_x not
R63217:63217 LF.Imp <> Y def
R63227:63227 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R63235:63236 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R63244:63245 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R63253:63254 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R63260:63261 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R63268:63268 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R63228:63232 LF.Imp <> SLoad constr
R63234:63234 LF.Imp <> X def
R63237:63241 LF.Imp <> SPush constr
R63246:63250 LF.Imp <> SLoad constr
R63252:63252 LF.Imp <> Y def
R63255:63259 LF.Imp <> SMult constr
R63262:63267 LF.Imp <> SMinus constr
prf 63593:63603 <> execute_app
binder 63614:63615 <> st:273
binder 63617:63618 <> p1:274
binder 63620:63621 <> p2:275
binder 63623:63627 <> stack:276
R63661:63663 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63632:63640 LF.Imp <> s_execute prfax
R63642:63643 LF.Imp <> st:273 var
R63645:63649 LF.Imp <> stack:276 var
R63654:63657 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R63652:63653 LF.Imp <> p1:274 var
R63658:63659 LF.Imp <> p2:275 var
R63664:63672 LF.Imp <> s_execute prfax
R63674:63675 LF.Imp <> st:273 var
R63678:63686 LF.Imp <> s_execute prfax
R63688:63689 LF.Imp <> st:273 var
R63691:63695 LF.Imp <> stack:276 var
R63697:63698 LF.Imp <> p1:274 var
R63701:63702 LF.Imp <> p2:275 var
prf 64085:64105 <> s_compile_correct_aux
binder 64116:64117 <> st:277
binder 64119:64119 <> e:278
binder 64121:64125 <> stack:279
R64162:64164 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64130:64138 LF.Imp <> s_execute prfax
R64140:64141 LF.Imp <> st:277 var
R64143:64147 LF.Imp <> stack:279 var
R64150:64158 LF.Imp <> s_compile prfax
R64160:64160 LF.Imp <> e:278 var
R64175:64178 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R64165:64169 LF.Imp <> aeval def
R64171:64172 LF.Imp <> st:277 var
R64174:64174 LF.Imp <> e:278 var
R64179:64183 LF.Imp <> stack:279 var
prf 64305:64321 <> s_compile_correct
R64338:64342 LF.Imp <> state def
binder 64333:64334 <> st:280
R64350:64353 LF.Imp <> aexp ind
binder 64346:64346 <> e:281
R64388:64390 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64359:64367 LF.Imp <> s_execute prfax
R64369:64370 LF.Imp <> st:280 var
R64372:64373 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R64376:64384 LF.Imp <> s_compile prfax
R64386:64386 LF.Imp <> e:281 var
R64391:64392 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R64403:64404 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R64393:64397 LF.Imp <> aeval def
R64399:64400 LF.Imp <> st:280 var
R64402:64402 LF.Imp <> e:281 var
mod 65365:65372 <> BreakImp
ind 65710:65712 BreakImp com
constr 65728:65732 BreakImp CSkip
constr 65738:65743 BreakImp CBreak
constr 65787:65791 BreakImp CAsgn
constr 65821:65824 BreakImp CSeq
constr 65844:65846 BreakImp CIf
constr 65877:65882 BreakImp CWhile
R65798:65803 Coq.Strings.String <> string ind
binder 65794:65794 <> x:284
R65811:65814 LF.Imp <> aexp ind
binder 65807:65807 <> a:285
R65835:65837 LF.Imp <> com:282 ind
binder 65827:65828 <> c1:286
binder 65830:65831 <> c2:287
R65853:65856 LF.Imp <> bexp ind
binder 65849:65849 <> b:288
R65868:65870 LF.Imp <> com:282 ind
binder 65860:65861 <> c1:289
binder 65863:65864 <> c2:290
R65889:65892 LF.Imp <> bexp ind
binder 65885:65885 <> b:291
R65900:65902 LF.Imp <> com:282 ind
binder 65896:65896 <> c:292
R65929:65934 LF.Imp BreakImp CBreak constr
not 65916:65916 BreakImp :com::'break'
R65995:65999 LF.Imp BreakImp CSkip constr
not 65973:65973 BreakImp :com:com_scope:'skip'
R66073:66077 LF.Imp BreakImp CAsgn constr
not 66050:66050 BreakImp :com:com_scope:x_':='_x
R66233:66236 LF.Imp BreakImp CSeq constr
not 66212:66212 BreakImp :com:com_scope:x_';'_x
R66371:66373 LF.Imp BreakImp CIf constr
not 66325:66325 BreakImp :com:com_scope:'if'_x_'then'_x_'else'_x_'end'
R66538:66543 LF.Imp BreakImp CWhile constr
not 66500:66500 BreakImp :com:com_scope:'while'_x_'do'_x_'end'
ind 67678:67683 BreakImp result
constr 67699:67707 BreakImp SContinue
constr 67713:67718 BreakImp SBreak
ind 70133:70137 BreakImp ceval
constr 70188:70193 BreakImp E_Skip
R70144:70147 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70141:70143 LF.Imp BreakImp com ind
R70153:70156 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70148:70152 LF.Imp <> state def
R70163:70166 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70157:70162 LF.Imp BreakImp result ind
R70172:70175 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70167:70171 LF.Imp <> state def
R70307:70311 LF.Imp <> ceval:296 ind
binder 70204:70205 <> st:297
R70216:70219 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70225:70229 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70232:70234 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70220:70224 LF.Imp BreakImp CSkip constr
R70214:70215 LF.Imp <> st:297 var
R70235:70243 LF.Imp BreakImp SContinue constr
R70230:70231 LF.Imp <> st:297 var
R70307:70311 LF.Imp BreakImp ceval ind
not 70275:70275 BreakImp :::x_'=['_x_']=>'_x_'/'_x
prf 70409:70420 BreakImp break_ignore
binder 70431:70431 <> c:298
binder 70433:70434 <> st:299
binder 70436:70438 <> st':300
binder 70440:70440 <> s:301
R70474:70482 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70450:70453 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70462:70466 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70470:70472 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70459:70460 LF.Imp BreakImp :com:com_scope:x_';'_x not
R70454:70458 LF.Imp BreakImp :com::'break' not
R70461:70461 LF.Imp <> c:298 var
R70448:70449 LF.Imp <> st:299 var
R70473:70473 LF.Imp <> s:301 var
R70467:70469 LF.Imp <> st':300 var
R70485:70487 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70483:70484 LF.Imp <> st:299 var
R70488:70490 LF.Imp <> st':300 var
prf 70540:70553 BreakImp while_continue
binder 70564:70564 <> b:302
binder 70566:70566 <> c:303
binder 70568:70569 <> st:304
binder 70571:70573 <> st':305
binder 70575:70575 <> s:306
R70614:70619 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70582:70585 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70602:70606 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70610:70612 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70586:70591 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R70593:70596 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R70598:70601 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R70592:70592 LF.Imp <> b:302 var
R70597:70597 LF.Imp <> c:303 var
R70580:70581 LF.Imp <> st:304 var
R70613:70613 LF.Imp <> s:306 var
R70607:70609 LF.Imp <> st':305 var
R70621:70623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70620:70620 LF.Imp <> s:306 var
R70624:70632 LF.Imp BreakImp SContinue constr
prf 70682:70701 BreakImp while_stops_on_break
binder 70712:70712 <> b:307
binder 70714:70714 <> c:308
binder 70716:70717 <> st:309
binder 70719:70721 <> st':310
R70743:70748 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70736:70738 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70726:70730 LF.Imp <> beval def
R70732:70733 LF.Imp <> st:309 var
R70735:70735 LF.Imp <> b:307 var
R70739:70742 LF.Imp <> :::'true' not
R70773:70778 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70751:70754 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70756:70760 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70764:70766 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70755:70755 LF.Imp <> c:308 var
R70749:70750 LF.Imp <> st:309 var
R70767:70772 LF.Imp BreakImp SBreak constr
R70761:70763 LF.Imp <> st':310 var
R70781:70784 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70801:70805 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70809:70811 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70785:70790 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R70792:70795 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R70797:70800 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R70791:70791 LF.Imp <> b:307 var
R70796:70796 LF.Imp <> c:308 var
R70779:70780 LF.Imp <> st:309 var
R70812:70820 LF.Imp BreakImp SContinue constr
R70806:70808 LF.Imp <> st':310 var
prf 70870:70881 BreakImp seq_continue
binder 70892:70893 <> c1:311
binder 70895:70896 <> c2:312
binder 70898:70899 <> st:313
binder 70901:70903 <> st':314
binder 70905:70908 <> st'':315
R70941:70946 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70915:70918 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70921:70925 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70929:70931 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70919:70920 LF.Imp <> c1:311 var
R70913:70914 LF.Imp <> st:313 var
R70932:70940 LF.Imp BreakImp SContinue constr
R70926:70928 LF.Imp <> st':314 var
R70977:70982 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70950:70953 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70956:70960 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70965:70967 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70954:70955 LF.Imp <> c2:312 var
R70947:70949 LF.Imp <> st':314 var
R70968:70976 LF.Imp BreakImp SContinue constr
R70961:70964 LF.Imp <> st'':315 var
R70985:70988 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70996:71000 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71005:71007 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R70991:70993 LF.Imp BreakImp :com:com_scope:x_';'_x not
R70989:70990 LF.Imp <> c1:311 var
R70994:70995 LF.Imp <> c2:312 var
R70983:70984 LF.Imp <> st:313 var
R71008:71016 LF.Imp BreakImp SContinue constr
R71001:71004 LF.Imp <> st'':315 var
prf 71066:71083 BreakImp seq_stops_on_break
binder 71094:71095 <> c1:316
binder 71097:71098 <> c2:317
binder 71100:71101 <> st:318
binder 71103:71105 <> st':319
R71135:71140 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71112:71115 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71118:71122 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71126:71128 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71116:71117 LF.Imp <> c1:316 var
R71110:71111 LF.Imp <> st:318 var
R71129:71134 LF.Imp BreakImp SBreak constr
R71123:71125 LF.Imp <> st':319 var
R71143:71146 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71154:71158 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71162:71164 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71149:71151 LF.Imp BreakImp :com:com_scope:x_';'_x not
R71147:71148 LF.Imp <> c1:316 var
R71152:71153 LF.Imp <> c2:317 var
R71141:71142 LF.Imp <> st:318 var
R71165:71170 LF.Imp BreakImp SBreak constr
R71159:71161 LF.Imp <> st':319 var
prf 71299:71314 BreakImp while_break_true
binder 71325:71325 <> b:320
binder 71327:71327 <> c:321
binder 71329:71330 <> st:322
binder 71332:71334 <> st':323
R71381:71386 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71341:71344 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71361:71365 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71369:71371 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71345:71350 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R71352:71355 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R71357:71360 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R71351:71351 LF.Imp <> b:320 var
R71356:71356 LF.Imp <> c:321 var
R71339:71340 LF.Imp <> st:322 var
R71372:71380 LF.Imp BreakImp SContinue constr
R71366:71368 LF.Imp <> st':323 var
R71405:71410 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71398:71400 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71387:71391 LF.Imp <> beval def
R71393:71395 LF.Imp <> st':323 var
R71397:71397 LF.Imp <> b:320 var
R71401:71404 LF.Imp <> :::'true' not
R71411:71417 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R71422:71423 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 71418:71421 <> st'':324
R71428:71431 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71433:71437 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71441:71443 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71432:71432 LF.Imp <> c:321 var
R71424:71427 LF.Imp <> st'':324 var
R71444:71449 LF.Imp BreakImp SBreak constr
R71438:71440 LF.Imp <> st':323 var
prf 71579:71597 BreakImp ceval_deterministic
R71610:71612 LF.Imp BreakImp com ind
binder 71608:71608 <> c:325
binder 71615:71616 <> st:326
binder 71618:71620 <> st1:327
binder 71622:71624 <> st2:328
binder 71626:71627 <> s1:329
binder 71629:71630 <> s2:330
R71658:71666 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71640:71643 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71645:71649 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71653:71655 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71644:71644 LF.Imp <> c:325 var
R71638:71639 LF.Imp <> st:326 var
R71656:71657 LF.Imp <> s1:329 var
R71650:71652 LF.Imp <> st1:327 var
R71687:71695 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71669:71672 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71674:71678 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71682:71684 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R71673:71673 LF.Imp <> c:325 var
R71667:71668 LF.Imp <> st:326 var
R71685:71686 LF.Imp <> s2:330 var
R71679:71681 LF.Imp <> st2:328 var
R71705:71708 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R71699:71701 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71696:71698 LF.Imp <> st1:327 var
R71702:71704 LF.Imp <> st2:328 var
R71711:71713 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71709:71710 LF.Imp <> s1:329 var
R71714:71715 LF.Imp <> s2:330 var
R71771:71778 LF.Imp BreakImp <> mod
